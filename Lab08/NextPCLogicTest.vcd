$date
	Mon Nov  9 14:27:13 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module NextPCLogicTest $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 8 ' passed [7:0] $end
$scope module dut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 ( CurrentPC [63:0] $end
$var wire 64 ) SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var reg 64 * NextPC [63:0] $end
$var reg 64 + realImm64 [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 , numTests [7:0] $end
$var reg 8 - passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 . actualOut [63:0] $end
$var reg 64 / expectedOut [63:0] $end
$var reg 8 0 passed [7:0] $end
$var reg 257 1 testType [256:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
b0 +
bx *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
0#
0"
bx !
$end
#2000
b100 !
b100 *
#3000
b10000 $
b10000 (
#5000
b10100 !
b10100 *
#13000
b1000 +
b10 %
b10 )
1#
1"
b1 '
b1 0
b1010000010000110010101100110100 1
b10100 /
b10100 .
#15000
b11000 !
b11000 *
#23000
b1100 +
b11 %
b11 )
0"
b10 '
b10 0
b100001101101111011011100110010001101001011101000110100101101111011011100110000101101100001000000111011101101001011101000110100000100000011000100111001001100001011011100110001101101000011010010110111001100111 1
b11000 /
b11000 .
#25000
b10100 !
b10100 *
#33000
b10000 +
b100 %
b100 )
0#
1&
b11 '
b11 0
b10000110110111101101110011001000110100101110100011010010110111101101110011000010110110000100000011011100110111100100000011000100111001001100001011011100110001101101000011010010110111001100111 1
b10100 /
b10100 .
#34000
b100000 !
b100000 *
#43000
b100 ,
b100 -
b100 '
b100 0
b101010101101110011000110110111101101110011001000110100101110100011010010110111101101110011000010110110000100000011000100111001001100001011011100110001101101000011010010110111001100111 1
b100000 /
b100000 .
